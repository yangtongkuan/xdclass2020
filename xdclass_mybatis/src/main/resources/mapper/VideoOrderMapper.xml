<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
 namespace: 名称空间，一般需要保持全局唯一,强烈建议使用对应dao层的全限定类名，
    可以映射 sql语句 到对应的方法名称和参数、返回类型
    mybatis是使用接口动态代理
-->
<mapper namespace="com.edu.online.mapper.VideoOrderMapper">

    <resultMap id="videoOrderUserResultMap" type="VideoOrder">
        <id property="id" column="id"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="state" property="state"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_title" property="videoTitle"/>
        <result column="user_id" property="userId"/>
        <!--
        association 配置属性一对一
        property 对应videoOrder里面的user属性名
        javType 这个属性的类型
        -->
        <association property="user" javaType="User">
            <id column="user_id" property="id"/>
            <result property="name" column="name"/>
            <result property="headImg" column="head_img"/>
            <!--<result property="createTime" column="create_time"/>-->
            <result property="phone" column="phone"/>
        </association>
    </resultMap>
    <!--
        一对一查询映射
        association 表示关联的对象查询
    -->
    <!--一对一管理查询订单， 订单内部包含用户属性-->
    <select id="queryVideoOrderList" resultMap="videoOrderUserResultMap">
        SELECT
         o.id,o.out_trade_no,o.state,o.total_fee,o.video_id,o.video_title,o.user_id,
          u.name,u.head_img,u.phone
         FROM video_order o left join user u on o.user_id = u.id
    </select>

    <!-- 一对多关系映射 -->
    <resultMap id="userOrderVideoResultMap" type="User">
        <id column="id" property="id"/>
        <result property="name" column="name"/>
        <result property="headImg" column="head_img"/>
        <result property="phone" column="phone"/>
        <!--
          property 填写pojo类中集合类属性的名称
          ofType 集合里面的pojo对象
          -->
        <collection property="videoOrderList" ofType="VideoOrder">
            <id property="id" column="order_id"/>
            <result column="out_trade_no" property="outTradeNo"/>
            <result column="state" property="state"/>
            <result column="total_fee" property="totalFee"/>
            <result column="video_id" property="videoId"/>
            <result column="video_title" property="videoTitle"/>
        </collection>
    </resultMap>

    <!-- 一对多关联查询 用户对应的订单信息 -->
    <select id="queryUserOrderList" resultMap="userOrderVideoResultMap">
        select
        u.id,u.name,u.head_img,u.phone,
        o.id as order_id,
        o.out_trade_no,o.state,o.total_fee,o.video_id,o.video_title
        from user u left join video_order as o
        on u.id = o.user_id;
    </select>

    <!-- mybatis 懒加载 -->
    <resultMap id="videoOrderUserResultMapLazy" type="VideoOrder">
        <id property="id" column="id"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="state" property="state"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_title" property="videoTitle"/>
        <result column="user_id" property="userId"/>
        <!--
        association 配置属性一对一
        property 对应videoOrder里面的user属性名
        javType 这个属性的类型
        -->
        <association property="user" javaType="User" column="user_id" select="findUserById"/>

    </resultMap>
    <!-- 通过id 查询用户信息 -->
    <select id="findUserById" resultType="User">
        select * from user where id = #{user_id}
    </select>

    <!-- lazy 懒加载-->
    <select id="queryVideoOrderListLazy" resultMap="videoOrderUserResultMapLazy">
        SELECT
         o.id,o.out_trade_no,o.state,o.total_fee,o.video_id,o.video_title,o.user_id
         FROM video_order o
    </select>


</mapper>